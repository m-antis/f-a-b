// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require_tree .


$(document).on('ready page:load', function(){

 (function(window, mapster) {

    var options = mapster.MAP_OPTIONS,
    element = document.getElementById('map-canvas'),
    // map
    map = mapster.create(element, options);

// below function for adding markers to all addresses in database

var orgNames = []
var addressAmt = parseInt($("#addressAmt").html())
var fullAddresses = []
var allLats = []
var allLngs = []
var orgIDs = []


    for (n=0 ; n < addressAmt ; n++){
        lat = parseFloat($("#latitude_"+n).html());
        allLats.push(lat);
        lng = parseFloat($("#longitude_"+n).html());
        allLngs.push(lng);
        fullAddress = $("#fullAddress_"+n).html();
        fullAddresses.push(fullAddress);
        orgName = $("#orgName_"+n).html();
        orgNames.push(orgName);
        orgID = parseInt($("#orgID_"+n).html());
        orgIDs.push(orgID);
    }
// push latitudes and longitudes into an array
    // for (n=0 ; n < addressAmt ; n++){
    //     lat = parseFloat($("#latitude_"+n).html());
    //     allLats.push(lat);
    // }

    // for (n=0 ; n < addressAmt ; n++){
    //     lng = parseFloat($("#longitude_"+n).html());
    //     allLngs.push(lng);
    // }

    // // push all full addresses that have the ID #fullAddress_ into the array fullAddress
    // for (a=0 ; a < addressAmt ; a++){
    //     fullAddress = $("#fullAddress_"+a).html();
    //     fullAddresses.push(fullAddress);
    // }

    // // push org names into array
    // for (n=0 ; n < addressAmt ; n++){
    //     orgName = $("#orgName_"+n).html();
    //     orgNames.push(orgName);
    // }

    // // push org IDs into array
    // for (i=0 ; i < addressAmt ; i++){
    //     orgID = parseInt($("#orgID_"+i).html());
    //     orgIDs.push(orgID);
    // }


    // addMarker to each address in the array all_addresses
    for (i=0; i< allLngs.length ; i++){
    // for (i=0; i< 4 ; i++){
    //     for (n=0; n< 4 ; n++){
            var org = orgNames[i];
            var orgID = orgIDs[i];
            var address = fullAddresses[i];
            var infoBox = org + address;
            var lat = allLats[i];
            var lng = allLngs[i]

            if (orgID === 7) {
                map.addMarker({
                	// location: address,
                    lat: lat,
                    lng: lng,
                    content: infoBox,
                    org_name: org,
                    id: orgID,
                    icon: "<%= asset_path('goodwill.png') %>"
                });
            } else if (orgID === 8) {
                map.addMarker({
                    // location: address,
                    lat: lat,
                    lng: lng,
                    content: infoBox,
                    org_name: org,
                    id: orgID,
                    icon: "<%= asset_path('salArmy.png') %>"
                });
            } else {
                 map.addMarker({
                    // location: address,
                    lat: lat,
                    lng: lng,
                    content: infoBox,
                    org_name: org,
                    id: orgID,
                    icon: "<%= asset_path('hangerIcon.png') %>"
                });
            }

            // if (marker.id === 2) {
            //     console.log(marker)
            // }
        };
// code template:
    var found = map.findMarkerById(2);

    console.log(found);

// if ID is 2, hide markers

var mark1 = document.getElementById("tag_box1");
  mark1.addEventListener("click", toggleMarkers1, false);


function toggleMarkers1() {
  if (mark1.checked) {
     console.log("checked");
    $(map.showMarkerById(6));
  } else {
     console.log("unchecked")
    $(map.hideMarkerById(6));
  }
}

var mark2 = document.getElementById("tag_box2");
  mark2.addEventListener("click", toggleMarkers2, false);


function toggleMarkers2() {
  if (mark2.checked) {
    $(map.showMarkerById(7));
  } else {
    $(map.hideMarkerById(7));
  }
}

var mark3 = document.getElementById("tag_box3");
  mark3.addEventListener("click", toggleMarkers3, false);

function toggleMarkers3() {
  if (mark3.checked) {
    $(map.showMarkerById(8));
  } else {
    $(map.hideMarkerById(8));
  }
}


var mark4 = document.getElementById("tag_box4");
  mark4.addEventListener("click", toggleMarkers4, false);

function toggleMarkers4() {
  if (mark4.checked) {
    $(map.showMarkerById(9));
  } else {
    $(map.hideMarkerById(9));
  }
}


//     var marks = $mapster.mapster('markers')
//         console.log(marks);
//         console.log(marks[0]["org_id"]);
// // put all orgs with the same org_id into the same array

// var org2 = []
// var org3 = []

// for (x=0 ; x < marks.length ; x++) {
//     var index = marks[x]["org_id"];
//     if (marks[x]["org_id"] === 2 ) {
//         org2.push(marks[x])
//     } else {
//         org3.push(marks[x])
//     }
// }
// console.log(org2)
// console.log(org3)



  }(window, window.Mapster));


});
